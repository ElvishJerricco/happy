>%{
> import Alex
>%}

> "lit_lx"/"lit_acts":-
> 
> { ^s = ^w#^n			}
> { %b = ^n^s*			}
> { %s = ^n^>.*			}
> { %c = ^n(~[^>^w].*|^s+~^w.*) }
> 
>   <scrap>   ::= %b%s+
>   <comment> ::= %b%c*
> 

>%{
> scrap _ _ inp len cont st = strip len inp
>	where
>	strip 0 _ = cont st
>	strip (n+1) (c:rst) =
>		if c=='\n'
>		   then '\n':strip_nl n rst
>		   else c:strip n rst
>
>	strip_nl (n+1) ('>':rst) = ' ':strip n rst
>	strip_nl n rst = strip n rst
>
> comment _ _ inp len cont st = strip len inp
>	where
>	strip 0 _ = cont st
>	strip (n+1) (c:rst) = if c=='\n' then c:strip n rst else strip n rst
>
>
> main:: IO ()
> main = interact literate
> 
> literate:: String -> String
> literate inp = drop 2 (gscan lit_scan () ('\n':'\n':inp))
>
> lit_scan:: GScan () String
> lit_scan = load_gscan (lit_acts,stop_act) lit_lx
>	where
>	stop_act p _ "" st = []
>	stop_act p _ _  _  = error (msg ++ loc p ++ "\n")
>
>	msg  = "literate preprocessing error at "
>
>	loc (Pn _ l c) = "line " ++ show(l-2) ++ ", column " ++ show c
>%}
