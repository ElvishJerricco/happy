module Scan(lexer, Posn(..), Token(..), Tkn(..), tokPosn) where

import Alex
import Array
import Data.Char
import Debug.Trace
alex = Array.array (0,69) [
	(0,St False [] (-1) (Array.array ('\t','~') [('\t',4),('\n',4),('\v',4),('\f',4),('\r`',-1),('a',23),('b',23),('c',23),('d',23),('e',23),('f',23),('g',23),('h',23),('i',23),('j',23),('k',23),('l',23),('m',23),('n',23),('o',23),('p',23),('q',23),('r',23),('s',23),('t',23),('u',23),('v',23),('w',23),('x',23),('y',23),('z',23),('{',15),('|',13),('}',13),('~',13)])),
	(1,St False [] (61) (Array.array ('\t','}') [('\t',5),('\n',5),('\v',5),('\f',5),('\r',5),('\SO',61),('\SI',61),('\DLE',61),('\DC1',61),('\DC2',61),('\DC3',61),('\DC4',61),('\NAK',61),('\SYN',61),('\ETB',61),('\CAN',61),('\EM',61),('\SUB',61),('\ESC',61),('\FS',61),('\GS',61),('\RS',61),('\US',61),(' ',5),('!',61),('"',61),('#',61),('$',61),('%',61),('&',61),('\'',61),('(',61),(')',61),('*',61),('+',61),(',',61),('-',12),('.',61),('/',61),('0',61),('1',61),('2',61),('3',61),('4',61),('5',61),('6',61),('7',61),('8',61),('9',61),(':',61),(';',61),('<',61),('=',61),('>',61),('?',61),('@',61),('A',61),('B',61),('C',61),('D',61),('E',61),('F',61),('G',61),('H',61),('I',61),('J',61),('K',61),('L',61),('M',61),('N',61),('O',61),('P',61),('Q',61),('R',61),('S',61),('T',61),('U',61),('V',61),('W',61),('X',61),('Y',61),('Z',61),('[',61),('\\',61),(']',61),('^',61),('_',61),('`',61),('a',61),('b',61),('c',61),('d',61),('e',61),('f',61),('g',61),('h',61),('i',61),('j',61),('k',61),('l',61),('m',61),('n',61),('o',61),('p',61),('q',61),('r',61),('s',61),('t',61),('u',61),('v',61),('w',61),('x',61),('y',61),('z',61),('{',62),('|',61),('}',63)])),
	(2,St False [] (-1) (Array.array ('\t','z') [('\t',4),('\n',4),('\v',4),('\f',4),('\r`',-1),('a',66),('b',66),('c',66),('d',66),('e',66),('f',66),('g',66),('h',66),('i',66),('j',66),('k',66),('l',66),('m',66),('n',66),('o',66),('p',66),('q',66),('r',66),('s',66),('t',66),('u',66),('v',66),('w',66),('x',66),('y',66),('z',66)])),
	(3,St False [] (-1) (Array.array ('\t','-') [('\t',4),('\n',4),('\v',4),('\f',4),('\r',4),('\SO',-1),('\SI',-1),('\DLE',-1),('\DC1',-1),('\DC2',-1),('\DC3',-1),('\DC4',-1),('\NAK',-1),('\SYN',-1),('\ETB',-1),('\CAN',-1),('\EM',-1),('\SUB',-1),('\ESC',-1),('\FS',-1),('\GS',-1),('\RS',-1),('\US',-1),(' ',4),('!',-1),('"',-1),('#',-1),('$',-1),('%',-1),('&',-1),('\'',-1),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',10)])),
	(4,St False [(Acc 0 (skip ) Nothing Nothing)] (-1) (Array.array ('\t',' ') [('\t',4),('\n',4),('\v',4),('\f',4),('\r',4),('\SO',-1),('\SI',-1),('\DLE',-1),('\DC1',-1),('\DC2',-1),('\DC3',-1),('\DC4',-1),('\NAK',-1),('\SYN',-1),('\ETB',-1),('\CAN',-1),('\EM',-1),('\SUB',-1),('\ESC',-1),('\FS',-1),('\GS',-1),('\RS',-1),('\US',-1),(' ',4)])),
	(5,St False [(Acc 0 (skip ) Nothing Nothing)] (61) (Array.array ('\t','}') [('\t',5),('\n',5),('\v',5),('\f',5),('\r',5),('\SO',61),('\SI',61),('\DLE',61),('\DC1',61),('\DC2',61),('\DC3',61),('\DC4',61),('\NAK',61),('\SYN',61),('\ETB',61),('\CAN',61),('\EM',61),('\SUB',61),('\ESC',61),('\FS',61),('\GS',61),('\RS',61),('\US',61),(' ',5),('!',61),('"',61),('#',61),('$',61),('%',61),('&',61),('\'',61),('(',61),(')',61),('*',61),('+',61),(',',61),('-',61),('.',61),('/',61),('0',61),('1',61),('2',61),('3',61),('4',61),('5',61),('6',61),('7',61),('8',61),('9',61),(':',61),(';',61),('<',61),('=',61),('>',61),('?',61),('@',61),('A',61),('B',61),('C',61),('D',61),('E',61),('F',61),('G',61),('H',61),('I',61),('J',61),('K',61),('L',61),('M',61),('N',61),('O',61),('P',61),('Q',61),('R',61),('S',61),('T',61),('U',61),('V',61),('W',61),('X',61),('Y',61),('Z',61),('[',61),('\\',61),(']',61),('^',61),('_',61),('`',61),('a',61),('b',61),('c',61),('d',61),('e',61),('f',61),('g',61),('h',61),('i',61),('j',61),('k',61),('l',61),('m',61),('n',61),('o',61),('p',61),('q',61),('r',61),('s',61),('t',61),('u',61),('v',61),('w',61),('x',61),('y',61),('z',61),('{',-1),('|',61),('}',-1)])),
	(6,St False [(Acc 0 (skip ) Nothing Nothing)] (8) (Array.array ('\n','\n') [('\n',-1)])),
	(7,St False [(Acc 0 (skip ) Nothing Nothing)] (9) (Array.array ('\n','}') [('\n',61),('\v',9),('\f',9),('\r`',9),('a',9),('b',9),('c',9),('d',9),('e',9),('f',9),('g',9),('h',9),('i',9),('j',9),('k',9),('l',9),('m',9),('n',9),('o',9),('p',9),('q',9),('r',9),('s',9),('t',9),('u',9),('v',9),('w',9),('x',9),('y',9),('z',9),('{',8),('|',9),('}',8)])),
	(8,St False [(Acc 0 (skip ) Nothing Nothing)] (8) (Array.array ('\n','\n') [('\n',-1)])),
	(9,St False [(Acc 0 (skip ) Nothing Nothing)] (9) (Array.array ('\n','}') [('\n',61),('\v',9),('\f',9),('\r`',9),('a',9),('b',9),('c',9),('d',9),('e',9),('f',9),('g',9),('h',9),('i',9),('j',9),('k',9),('l',9),('m',9),('n',9),('o',9),('p',9),('q',9),('r',9),('s',9),('t',9),('u',9),('v',9),('w',9),('x',9),('y',9),('z',9),('{',8),('|',9),('}',8)])),
	(10,St False [] (-1) (Array.array ('-','-') [('-',6)])),
	(11,St False [(Acc 1 (special ) Nothing Nothing)] (-1) (Array.array ('-','-') [('-',6)])),
	(12,St False [(Acc 13 (code ) Nothing Nothing)] (61) (Array.array ('-','}') [('-',7),('.',61),('/',61),('0',61),('1',61),('2',61),('3',61),('4',61),('5',61),('6',61),('7',61),('8',61),('9',61),(':',61),(';',61),('<',61),('=',61),('>',61),('?',61),('@',61),('A',61),('B',61),('C',61),('D',61),('E',61),('F',61),('G',61),('H',61),('I',61),('J',61),('K',61),('L',61),('M',61),('N',61),('O',61),('P',61),('Q',61),('R',61),('S',61),('T',61),('U',61),('V',61),('W',61),('X',61),('Y',61),('Z',61),('[',61),('\\',61),(']',61),('^',61),('_',61),('`',61),('a',61),('b',61),('c',61),('d',61),('e',61),('f',61),('g',61),('h',61),('i',61),('j',61),('k',61),('l',61),('m',61),('n',61),('o',61),('p',61),('q',61),('r',61),('s',61),('t',61),('u',61),('v',61),('w',61),('x',61),('y',61),('z',61),('{',-1),('|',61),('}',-1)])),
	(13,St False [(Acc 1 (special ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(14,St False [(Acc 1 (special ) Nothing Nothing)] (-1) (Array.array (' ','~') [(' ',32),('!',32),('"',32),('#',32),('$',32),('%',32),('&',32),('\'',32),('(',32),(')',32),('*',32),('+',32),(',',32),('-',32),('.',32),('/',32),('0',29),('1',29),('2',29),('3',29),('4',29),('5',29),('6',29),('7',29),('8',29),('9',29),(':',32),(';',32),('<',32),('=',32),('>',32),('?',32),('@',32),('A',32),('B',32),('C',32),('D',32),('E',32),('F',32),('G',32),('H',32),('I',32),('J',32),('K',32),('L',32),('M',32),('N',32),('O',32),('P',32),('Q',32),('R',32),('S',32),('T',32),('U',32),('V',32),('W',32),('X',32),('Y',32),('Z',32),('[',32),('\\',32),(']',32),('^',32),('_',32),('`',32),('a',32),('b',32),('c',32),('d',32),('e',32),('f',32),('g',32),('h',32),('i',32),('j',32),('k',32),('l',32),('m',32),('n',32),('o',32),('p',32),('q',32),('r',32),('s',32),('t',32),('u',32),('v',32),('w',32),('x',32),('y',32),('z',32),('{',32),('|',32),('}',32),('~',32)])),
	(15,St False [(Acc 2 (brace ) Nothing Nothing)] (60) (Array.array ('0','}') [('0',-1),('1',-1),('2',-1),('3',-1),('4',-1),('5',-1),('6',-1),('7',-1),('8',-1),('9',-1),(':',60),(';',60),('<',60),('=',60),('>',60),('?',60),('@',60),('A',60),('B',60),('C',60),('D',60),('E',60),('F',60),('G',60),('H',60),('I',60),('J',60),('K',60),('L',60),('M',60),('N',60),('O',60),('P',60),('Q',60),('R',60),('S',60),('T',60),('U',60),('V',60),('W',60),('X',60),('Y',60),('Z',60),('[',60),('\\',60),(']',60),('^',60),('_',60),('`',60),('a',60),('b',60),('c',60),('d',60),('e',60),('f',60),('g',60),('h',60),('i',60),('j',60),('k',60),('l',60),('m',60),('n',60),('o',60),('p',60),('q',60),('r',60),('s',60),('t',60),('u',60),('v',60),('w',60),('x',60),('y',60),('z',60),('{',60),('|',60),('}',-1)])),
	(16,St False [(Acc 3 (string ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(17,St False [] (18) (Array.array ('\n','"') [('\n',-1),('\v',18),('\f',18),('\r',18),('\SO',18),('\SI',18),('\DLE',18),('\DC1',18),('\DC2',18),('\DC3',18),('\DC4',18),('\NAK',18),('\SYN',18),('\ETB',18),('\CAN',18),('\EM',18),('\SUB',18),('\ESC',18),('\FS',18),('\GS',18),('\RS',18),('\US',18),(' ',18),('!',18),('"',16)])),
	(18,St False [] (18) (Array.array ('\n','"') [('\n',-1),('\v',18),('\f',18),('\r',18),('\SO',18),('\SI',18),('\DLE',18),('\DC1',18),('\DC2',18),('\DC3',18),('\DC4',18),('\NAK',18),('\SYN',18),('\ETB',18),('\CAN',18),('\EM',18),('\SUB',18),('\ESC',18),('\FS',18),('\GS',18),('\RS',18),('\US',18),(' ',18),('!',18),('"',16)])),
	(19,St False [(Acc 4 (bind ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(20,St False [(Acc 4 (bind ) Nothing Nothing)] (27) (Array.array ('\n',':') [('\n',-1),('\v',27),('\f',27),('\r',27),('\SO',27),('\SI',27),('\DLE',27),('\DC1',27),('\DC2',27),('\DC3',27),('\DC4',27),('\NAK',27),('\SYN',27),('\ETB',27),('\CAN',27),('\EM',27),('\SUB',27),('\ESC',27),('\FS',27),('\GS',27),('\RS',27),('\US',27),(' ',27),('!',27),('"',27),('#',27),('$',27),('%',27),('&',27),('\'',27),('(',27),(')',27),('*',27),('+',27),(',',27),('-',27),('.',27),('/',27),('0',27),('1',27),('2',27),('3',27),('4',27),('5',27),('6',27),('7',27),('8',27),('9',27),(':',22)])),
	(21,St False [] (-1) (Array.array ('-','-') [('-',19)])),
	(22,St False [] (27) (Array.array ('\n',':') [('\n',-1),('\v',27),('\f',27),('\r',27),('\SO',27),('\SI',27),('\DLE',27),('\DC1',27),('\DC2',27),('\DC3',27),('\DC4',27),('\NAK',27),('\SYN',27),('\ETB',27),('\CAN',27),('\EM',27),('\SUB',27),('\ESC',27),('\FS',27),('\GS',27),('\RS',27),('\US',27),(' ',27),('!',27),('"',27),('#',27),('$',27),('%',27),('&',27),('\'',27),('(',27),(')',27),('*',27),('+',27),(',',27),('-',20),('.',27),('/',27),('0',27),('1',27),('2',27),('3',27),('4',27),('5',27),('6',27),('7',27),('8',27),('9',27),(':',22)])),
	(23,St False [(Acc 7 (char ) Nothing Nothing)] (-1) (Array.array ('\t','z') [('\t',25),('\n',25),('\v',25),('\f',25),('\r`',-1),('a',24),('b',24),('c',24),('d',24),('e',24),('f',24),('g',24),('h',24),('i',24),('j',24),('k',24),('l',24),('m',24),('n',24),('o',24),('p',24),('q',24),('r',24),('s',24),('t',24),('u',24),('v',24),('w',24),('x',24),('y',24),('z',24)])),
	(24,St False [] (-1) (Array.array ('\t','z') [('\t',25),('\n',25),('\v',25),('\f',25),('\r`',-1),('a',24),('b',24),('c',24),('d',24),('e',24),('f',24),('g',24),('h',24),('i',24),('j',24),('k',24),('l',24),('m',24),('n',24),('o',24),('p',24),('q',24),('r',24),('s',24),('t',24),('u',24),('v',24),('w',24),('x',24),('y',24),('z',24)])),
	(25,St False [] (-1) (Array.array ('\t',':') [('\t',25),('\n',25),('\v',25),('\f',25),('\r',25),('\SO',-1),('\SI',-1),('\DLE',-1),('\DC1',-1),('\DC2',-1),('\DC3',-1),('\DC4',-1),('\NAK',-1),('\SYN',-1),('\ETB',-1),('\CAN',-1),('\EM',-1),('\SUB',-1),('\ESC',-1),('\FS',-1),('\GS',-1),('\RS',-1),('\US',-1),(' ',25),('!',-1),('"',-1),('#',-1),('$',-1),('%',-1),('&',-1),('\'',-1),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',-1),('.',-1),('/',-1),('0',-1),('1',-1),('2',-1),('3',-1),('4',-1),('5',-1),('6',-1),('7',-1),('8',-1),('9',-1),(':',21)])),
	(26,St False [] (27) (Array.array ('\n',':') [('\n',-1),('\v',27),('\f',27),('\r',27),('\SO',27),('\SI',27),('\DLE',27),('\DC1',27),('\DC2',27),('\DC3',27),('\DC4',27),('\NAK',27),('\SYN',27),('\ETB',27),('\CAN',27),('\EM',27),('\SUB',27),('\ESC',27),('\FS',27),('\GS',27),('\RS',27),('\US',27),(' ',27),('!',27),('"',27),('#',27),('$',27),('%',27),('&',27),('\'',27),('(',27),(')',27),('*',27),('+',27),(',',27),('-',27),('.',27),('/',27),('0',27),('1',27),('2',27),('3',27),('4',27),('5',27),('6',27),('7',27),('8',27),('9',27),(':',22)])),
	(27,St False [] (27) (Array.array ('\n',':') [('\n',-1),('\v',27),('\f',27),('\r',27),('\SO',27),('\SI',27),('\DLE',27),('\DC1',27),('\DC2',27),('\DC3',27),('\DC4',27),('\NAK',27),('\SYN',27),('\ETB',27),('\CAN',27),('\EM',27),('\SUB',27),('\ESC',27),('\FS',27),('\GS',27),('\RS',27),('\US',27),(' ',27),('!',27),('"',27),('#',27),('$',27),('%',27),('&',27),('\'',27),('(',27),(')',27),('*',27),('+',27),(',',27),('-',27),('.',27),('/',27),('0',27),('1',27),('2',27),('3',27),('4',27),('5',27),('6',27),('7',27),('8',27),('9',27),(':',22)])),
	(28,St False [] (-1) (Array.array ('-','-') [('-',26)])),
	(29,St False [(Acc 5 (cch ) Nothing Nothing)] (-1) (Array.array ('0','9') [('0',30),('1',30),('2',30),('3',30),('4',30),('5',30),('6',30),('7',30),('8',30),('9',30)])),
	(30,St False [(Acc 5 (cch ) Nothing Nothing)] (-1) (Array.array ('0','9') [('0',31),('1',31),('2',31),('3',31),('4',31),('5',31),('6',31),('7',31),('8',31),('9',31)])),
	(31,St False [(Acc 5 (cch ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(32,St False [(Acc 6 (escape ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(33,St False [(Acc 7 (char ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(34,St False [(Acc 8 (smac ) Nothing Nothing)] (-1) (Array.array ('\t','z') [('\t',50),('\n',50),('\v',50),('\f',50),('\r`',-1),('a',35),('b',35),('c',35),('d',35),('e',35),('f',35),('g',35),('h',35),('i',35),('j',35),('k',35),('l',35),('m',35),('n',35),('o',35),('p',35),('q',35),('r',35),('s',35),('t',35),('u',35),('v',35),('w',35),('x',35),('y',35),('z',35)])),
	(35,St False [(Acc 8 (smac ) Nothing Nothing)] (-1) (Array.array ('\t','z') [('\t',50),('\n',50),('\v',50),('\f',50),('\r`',-1),('a',35),('b',35),('c',35),('d',35),('e',35),('f',35),('g',35),('h',35),('i',35),('j',35),('k',35),('l',35),('m',35),('n',35),('o',35),('p',35),('q',35),('r',35),('s',35),('t',35),('u',35),('v',35),('w',35),('x',35),('y',35),('z',35)])),
	(36,St False [(Acc 8 (smac ) Nothing Nothing)] (-1) (Array.array ('\t','=') [('\t',50),('\n',50),('\v',50),('\f',50),('\r',50),('\SO',-1),('\SI',-1),('\DLE',-1),('\DC1',-1),('\DC2',-1),('\DC3',-1),('\DC4',-1),('\NAK',-1),('\SYN',-1),('\ETB',-1),('\CAN',-1),('\EM',-1),('\SUB',-1),('\ESC',-1),('\FS',-1),('\GS',-1),('\RS',-1),('\US',-1),(' ',50),('!',-1),('"',-1),('#',-1),('$',-1),('%',-1),('&',-1),('\'',-1),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',53),('.',-1),('/',-1),('0',-1),('1',-1),('2',-1),('3',-1),('4',-1),('5',-1),('6',-1),('7',-1),('8',-1),('9',-1),(':',-1),(';',-1),('<',-1),('=',48)])),
	(37,St False [] (-1) (Array.array ('A','{') [('A',34),('B',34),('C',34),('D',34),('E',34),('F',34),('G',34),('H',34),('I',34),('J',34),('K',34),('L',34),('M',34),('N',34),('O',34),('P',34),('Q',34),('R',34),('S',34),('T',34),('U',34),('V',34),('W',34),('X',34),('Y',34),('Z',34),('[',-1),('\\',-1),(']',-1),('^',-1),('_',-1),('`',-1),('a',34),('b',34),('c',34),('d',34),('e',34),('f',34),('g',34),('h',34),('i',34),('j',34),('k',34),('l',34),('m',34),('n',34),('o',34),('p',34),('q',34),('r',34),('s',34),('t',34),('u',34),('v',34),('w',34),('x',34),('y',34),('z',34),('{',40)])),
	(38,St False [] (-1) (Array.array ('\'','}') [('\'',39),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',-1),('.',-1),('/',-1),('0',39),('1',39),('2',39),('3',39),('4',39),('5',39),('6',39),('7',39),('8',39),('9',39),(':',-1),(';',-1),('<',-1),('=',-1),('>',-1),('?',-1),('@',-1),('A',39),('B',39),('C',39),('D',39),('E',39),('F',39),('G',39),('H',39),('I',39),('J',39),('K',39),('L',39),('M',39),('N',39),('O',39),('P',39),('Q',39),('R',39),('S',39),('T',39),('U',39),('V',39),('W',39),('X',39),('Y',39),('Z',39),('[',-1),('\\',-1),(']',-1),('^',-1),('_',39),('`',-1),('a',39),('b',39),('c',39),('d',39),('e',39),('f',39),('g',39),('h',39),('i',39),('j',39),('k',39),('l',39),('m',39),('n',39),('o',39),('p',39),('q',39),('r',39),('s',39),('t',39),('u',39),('v',39),('w',39),('x',39),('y',39),('z',39),('{',-1),('|',-1),('}',36)])),
	(39,St False [] (-1) (Array.array ('\'','}') [('\'',39),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',-1),('.',-1),('/',-1),('0',39),('1',39),('2',39),('3',39),('4',39),('5',39),('6',39),('7',39),('8',39),('9',39),(':',-1),(';',-1),('<',-1),('=',-1),('>',-1),('?',-1),('@',-1),('A',39),('B',39),('C',39),('D',39),('E',39),('F',39),('G',39),('H',39),('I',39),('J',39),('K',39),('L',39),('M',39),('N',39),('O',39),('P',39),('Q',39),('R',39),('S',39),('T',39),('U',39),('V',39),('W',39),('X',39),('Y',39),('Z',39),('[',-1),('\\',-1),(']',-1),('^',-1),('_',39),('`',-1),('a',39),('b',39),('c',39),('d',39),('e',39),('f',39),('g',39),('h',39),('i',39),('j',39),('k',39),('l',39),('m',39),('n',39),('o',39),('p',39),('q',39),('r',39),('s',39),('t',39),('u',39),('v',39),('w',39),('x',39),('y',39),('z',39),('{',-1),('|',-1),('}',36)])),
	(40,St False [] (-1) (Array.array ('A','z') [('A',38),('B',38),('C',38),('D',38),('E',38),('F',38),('G',38),('H',38),('I',38),('J',38),('K',38),('L',38),('M',38),('N',38),('O',38),('P',38),('Q',38),('R',38),('S',38),('T',38),('U',38),('V',38),('W',38),('X',38),('Y',38),('Z',38),('[',-1),('\\',-1),(']',-1),('^',-1),('_',-1),('`',-1),('a',38),('b',38),('c',38),('d',38),('e',38),('f',38),('g',38),('h',38),('i',38),('j',38),('k',38),('l',38),('m',38),('n',38),('o',38),('p',38),('q',38),('r',38),('s',38),('t',38),('u',38),('v',38),('w',38),('x',38),('y',38),('z',38)])),
	(41,St False [(Acc 9 (rmac ) Nothing Nothing)] (-1) (Array.array ('\t','z') [('\t',56),('\n',56),('\v',56),('\f',56),('\r`',-1),('a',42),('b',42),('c',42),('d',42),('e',42),('f',42),('g',42),('h',42),('i',42),('j',42),('k',42),('l',42),('m',42),('n',42),('o',42),('p',42),('q',42),('r',42),('s',42),('t',42),('u',42),('v',42),('w',42),('x',42),('y',42),('z',42)])),
	(42,St False [(Acc 9 (rmac ) Nothing Nothing)] (-1) (Array.array ('\t','z') [('\t',56),('\n',56),('\v',56),('\f',56),('\r`',-1),('a',42),('b',42),('c',42),('d',42),('e',42),('f',42),('g',42),('h',42),('i',42),('j',42),('k',42),('l',42),('m',42),('n',42),('o',42),('p',42),('q',42),('r',42),('s',42),('t',42),('u',42),('v',42),('w',42),('x',42),('y',42),('z',42)])),
	(43,St False [(Acc 9 (rmac ) Nothing Nothing)] (-1) (Array.array ('\t','=') [('\t',56),('\n',56),('\v',56),('\f',56),('\r',56),('\SO',-1),('\SI',-1),('\DLE',-1),('\DC1',-1),('\DC2',-1),('\DC3',-1),('\DC4',-1),('\NAK',-1),('\SYN',-1),('\ETB',-1),('\CAN',-1),('\EM',-1),('\SUB',-1),('\ESC',-1),('\FS',-1),('\GS',-1),('\RS',-1),('\US',-1),(' ',56),('!',-1),('"',-1),('#',-1),('$',-1),('%',-1),('&',-1),('\'',-1),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',59),('.',-1),('/',-1),('0',-1),('1',-1),('2',-1),('3',-1),('4',-1),('5',-1),('6',-1),('7',-1),('8',-1),('9',-1),(':',-1),(';',-1),('<',-1),('=',54)])),
	(44,St False [] (-1) (Array.array ('A','{') [('A',41),('B',41),('C',41),('D',41),('E',41),('F',41),('G',41),('H',41),('I',41),('J',41),('K',41),('L',41),('M',41),('N',41),('O',41),('P',41),('Q',41),('R',41),('S',41),('T',41),('U',41),('V',41),('W',41),('X',41),('Y',41),('Z',41),('[',-1),('\\',-1),(']',-1),('^',-1),('_',-1),('`',-1),('a',41),('b',41),('c',41),('d',41),('e',41),('f',41),('g',41),('h',41),('i',41),('j',41),('k',41),('l',41),('m',41),('n',41),('o',41),('p',41),('q',41),('r',41),('s',41),('t',41),('u',41),('v',41),('w',41),('x',41),('y',41),('z',41),('{',47)])),
	(45,St False [] (-1) (Array.array ('\'','}') [('\'',46),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',-1),('.',-1),('/',-1),('0',46),('1',46),('2',46),('3',46),('4',46),('5',46),('6',46),('7',46),('8',46),('9',46),(':',-1),(';',-1),('<',-1),('=',-1),('>',-1),('?',-1),('@',-1),('A',46),('B',46),('C',46),('D',46),('E',46),('F',46),('G',46),('H',46),('I',46),('J',46),('K',46),('L',46),('M',46),('N',46),('O',46),('P',46),('Q',46),('R',46),('S',46),('T',46),('U',46),('V',46),('W',46),('X',46),('Y',46),('Z',46),('[',-1),('\\',-1),(']',-1),('^',-1),('_',46),('`',-1),('a',46),('b',46),('c',46),('d',46),('e',46),('f',46),('g',46),('h',46),('i',46),('j',46),('k',46),('l',46),('m',46),('n',46),('o',46),('p',46),('q',46),('r',46),('s',46),('t',46),('u',46),('v',46),('w',46),('x',46),('y',46),('z',46),('{',-1),('|',-1),('}',43)])),
	(46,St False [] (-1) (Array.array ('\'','}') [('\'',46),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',-1),('.',-1),('/',-1),('0',46),('1',46),('2',46),('3',46),('4',46),('5',46),('6',46),('7',46),('8',46),('9',46),(':',-1),(';',-1),('<',-1),('=',-1),('>',-1),('?',-1),('@',-1),('A',46),('B',46),('C',46),('D',46),('E',46),('F',46),('G',46),('H',46),('I',46),('J',46),('K',46),('L',46),('M',46),('N',46),('O',46),('P',46),('Q',46),('R',46),('S',46),('T',46),('U',46),('V',46),('W',46),('X',46),('Y',46),('Z',46),('[',-1),('\\',-1),(']',-1),('^',-1),('_',46),('`',-1),('a',46),('b',46),('c',46),('d',46),('e',46),('f',46),('g',46),('h',46),('i',46),('j',46),('k',46),('l',46),('m',46),('n',46),('o',46),('p',46),('q',46),('r',46),('s',46),('t',46),('u',46),('v',46),('w',46),('x',46),('y',46),('z',46),('{',-1),('|',-1),('}',43)])),
	(47,St False [] (-1) (Array.array ('A','z') [('A',45),('B',45),('C',45),('D',45),('E',45),('F',45),('G',45),('H',45),('I',45),('J',45),('K',45),('L',45),('M',45),('N',45),('O',45),('P',45),('Q',45),('R',45),('S',45),('T',45),('U',45),('V',45),('W',45),('X',45),('Y',45),('Z',45),('[',-1),('\\',-1),(']',-1),('^',-1),('_',-1),('`',-1),('a',45),('b',45),('c',45),('d',45),('e',45),('f',45),('g',45),('h',45),('i',45),('j',45),('k',45),('l',45),('m',45),('n',45),('o',45),('p',45),('q',45),('r',45),('s',45),('t',45),('u',45),('v',45),('w',45),('x',45),('y',45),('z',45)])),
	(48,St False [(Acc 10 (smacdef ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(49,St False [(Acc 10 (smacdef ) Nothing Nothing)] (52) (Array.array ('\n','=') [('\n',-1),('\v',52),('\f',52),('\r',52),('\SO',52),('\SI',52),('\DLE',52),('\DC1',52),('\DC2',52),('\DC3',52),('\DC4',52),('\NAK',52),('\SYN',52),('\ETB',52),('\CAN',52),('\EM',52),('\SUB',52),('\ESC',52),('\FS',52),('\GS',52),('\RS',52),('\US',52),(' ',52),('!',52),('"',52),('#',52),('$',52),('%',52),('&',52),('\'',52),('(',52),(')',52),('*',52),('+',52),(',',52),('-',52),('.',52),('/',52),('0',52),('1',52),('2',52),('3',52),('4',52),('5',52),('6',52),('7',52),('8',52),('9',52),(':',52),(';',52),('<',52),('=',49)])),
	(50,St False [] (-1) (Array.array ('\t','=') [('\t',50),('\n',50),('\v',50),('\f',50),('\r',50),('\SO',-1),('\SI',-1),('\DLE',-1),('\DC1',-1),('\DC2',-1),('\DC3',-1),('\DC4',-1),('\NAK',-1),('\SYN',-1),('\ETB',-1),('\CAN',-1),('\EM',-1),('\SUB',-1),('\ESC',-1),('\FS',-1),('\GS',-1),('\RS',-1),('\US',-1),(' ',50),('!',-1),('"',-1),('#',-1),('$',-1),('%',-1),('&',-1),('\'',-1),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',-1),('.',-1),('/',-1),('0',-1),('1',-1),('2',-1),('3',-1),('4',-1),('5',-1),('6',-1),('7',-1),('8',-1),('9',-1),(':',-1),(';',-1),('<',-1),('=',48)])),
	(51,St False [] (52) (Array.array ('\n','=') [('\n',-1),('\v',52),('\f',52),('\r',52),('\SO',52),('\SI',52),('\DLE',52),('\DC1',52),('\DC2',52),('\DC3',52),('\DC4',52),('\NAK',52),('\SYN',52),('\ETB',52),('\CAN',52),('\EM',52),('\SUB',52),('\ESC',52),('\FS',52),('\GS',52),('\RS',52),('\US',52),(' ',52),('!',52),('"',52),('#',52),('$',52),('%',52),('&',52),('\'',52),('(',52),(')',52),('*',52),('+',52),(',',52),('-',52),('.',52),('/',52),('0',52),('1',52),('2',52),('3',52),('4',52),('5',52),('6',52),('7',52),('8',52),('9',52),(':',52),(';',52),('<',52),('=',49)])),
	(52,St False [] (52) (Array.array ('\n','=') [('\n',-1),('\v',52),('\f',52),('\r',52),('\SO',52),('\SI',52),('\DLE',52),('\DC1',52),('\DC2',52),('\DC3',52),('\DC4',52),('\NAK',52),('\SYN',52),('\ETB',52),('\CAN',52),('\EM',52),('\SUB',52),('\ESC',52),('\FS',52),('\GS',52),('\RS',52),('\US',52),(' ',52),('!',52),('"',52),('#',52),('$',52),('%',52),('&',52),('\'',52),('(',52),(')',52),('*',52),('+',52),(',',52),('-',52),('.',52),('/',52),('0',52),('1',52),('2',52),('3',52),('4',52),('5',52),('6',52),('7',52),('8',52),('9',52),(':',52),(';',52),('<',52),('=',49)])),
	(53,St False [] (-1) (Array.array ('-','-') [('-',51)])),
	(54,St False [(Acc 11 (rmacdef ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(55,St False [(Acc 11 (rmacdef ) Nothing Nothing)] (58) (Array.array ('\n','=') [('\n',-1),('\v',58),('\f',58),('\r',58),('\SO',58),('\SI',58),('\DLE',58),('\DC1',58),('\DC2',58),('\DC3',58),('\DC4',58),('\NAK',58),('\SYN',58),('\ETB',58),('\CAN',58),('\EM',58),('\SUB',58),('\ESC',58),('\FS',58),('\GS',58),('\RS',58),('\US',58),(' ',58),('!',58),('"',58),('#',58),('$',58),('%',58),('&',58),('\'',58),('(',58),(')',58),('*',58),('+',58),(',',58),('-',58),('.',58),('/',58),('0',58),('1',58),('2',58),('3',58),('4',58),('5',58),('6',58),('7',58),('8',58),('9',58),(':',58),(';',58),('<',58),('=',55)])),
	(56,St False [] (-1) (Array.array ('\t','=') [('\t',56),('\n',56),('\v',56),('\f',56),('\r',56),('\SO',-1),('\SI',-1),('\DLE',-1),('\DC1',-1),('\DC2',-1),('\DC3',-1),('\DC4',-1),('\NAK',-1),('\SYN',-1),('\ETB',-1),('\CAN',-1),('\EM',-1),('\SUB',-1),('\ESC',-1),('\FS',-1),('\GS',-1),('\RS',-1),('\US',-1),(' ',56),('!',-1),('"',-1),('#',-1),('$',-1),('%',-1),('&',-1),('\'',-1),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',-1),('.',-1),('/',-1),('0',-1),('1',-1),('2',-1),('3',-1),('4',-1),('5',-1),('6',-1),('7',-1),('8',-1),('9',-1),(':',-1),(';',-1),('<',-1),('=',54)])),
	(57,St False [] (58) (Array.array ('\n','=') [('\n',-1),('\v',58),('\f',58),('\r',58),('\SO',58),('\SI',58),('\DLE',58),('\DC1',58),('\DC2',58),('\DC3',58),('\DC4',58),('\NAK',58),('\SYN',58),('\ETB',58),('\CAN',58),('\EM',58),('\SUB',58),('\ESC',58),('\FS',58),('\GS',58),('\RS',58),('\US',58),(' ',58),('!',58),('"',58),('#',58),('$',58),('%',58),('&',58),('\'',58),('(',58),(')',58),('*',58),('+',58),(',',58),('-',58),('.',58),('/',58),('0',58),('1',58),('2',58),('3',58),('4',58),('5',58),('6',58),('7',58),('8',58),('9',58),(':',58),(';',58),('<',58),('=',55)])),
	(58,St False [] (58) (Array.array ('\n','=') [('\n',-1),('\v',58),('\f',58),('\r',58),('\SO',58),('\SI',58),('\DLE',58),('\DC1',58),('\DC2',58),('\DC3',58),('\DC4',58),('\NAK',58),('\SYN',58),('\ETB',58),('\CAN',58),('\EM',58),('\SUB',58),('\ESC',58),('\FS',58),('\GS',58),('\RS',58),('\US',58),(' ',58),('!',58),('"',58),('#',58),('$',58),('%',58),('&',58),('\'',58),('(',58),(')',58),('*',58),('+',58),(',',58),('-',58),('.',58),('/',58),('0',58),('1',58),('2',58),('3',58),('4',58),('5',58),('6',58),('7',58),('8',58),('9',58),(':',58),(';',58),('<',58),('=',55)])),
	(59,St False [] (-1) (Array.array ('-','-') [('-',57)])),
	(60,St False [(Acc 12 (begin incode nest_code ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(61,St False [(Acc 13 (code ) Nothing Nothing)] (61) (Array.array ('{','}') [('{',-1),('|',61),('}',-1)])),
	(62,St False [(Acc 14 (nest_code ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(63,St False [(Acc 15 (unnest_code ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(64,St False [(Acc 16 (begin startcodes special ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(65,St False [(Acc 17 (zero ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(66,St False [(Acc 18 (startcode ) Nothing Nothing)] (-1) (Array.array ('\'','z') [('\'',67),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',-1),('.',-1),('/',-1),('0',67),('1',67),('2',67),('3',67),('4',67),('5',67),('6',67),('7',67),('8',67),('9',67),(':',-1),(';',-1),('<',-1),('=',-1),('>',-1),('?',-1),('@',-1),('A',67),('B',67),('C',67),('D',67),('E',67),('F',67),('G',67),('H',67),('I',67),('J',67),('K',67),('L',67),('M',67),('N',67),('O',67),('P',67),('Q',67),('R',67),('S',67),('T',67),('U',67),('V',67),('W',67),('X',67),('Y',67),('Z',67),('[',-1),('\\',-1),(']',-1),('^',-1),('_',67),('`',-1),('a',67),('b',67),('c',67),('d',67),('e',67),('f',67),('g',67),('h',67),('i',67),('j',67),('k',67),('l',67),('m',67),('n',67),('o',67),('p',67),('q',67),('r',67),('s',67),('t',67),('u',67),('v',67),('w',67),('x',67),('y',67),('z',67)])),
	(67,St False [(Acc 18 (startcode ) Nothing Nothing)] (-1) (Array.array ('\'','z') [('\'',67),('(',-1),(')',-1),('*',-1),('+',-1),(',',-1),('-',-1),('.',-1),('/',-1),('0',67),('1',67),('2',67),('3',67),('4',67),('5',67),('6',67),('7',67),('8',67),('9',67),(':',-1),(';',-1),('<',-1),('=',-1),('>',-1),('?',-1),('@',-1),('A',67),('B',67),('C',67),('D',67),('E',67),('F',67),('G',67),('H',67),('I',67),('J',67),('K',67),('L',67),('M',67),('N',67),('O',67),('P',67),('Q',67),('R',67),('S',67),('T',67),('U',67),('V',67),('W',67),('X',67),('Y',67),('Z',67),('[',-1),('\\',-1),(']',-1),('^',-1),('_',67),('`',-1),('a',67),('b',67),('c',67),('d',67),('e',67),('f',67),('g',67),('h',67),('i',67),('j',67),('k',67),('l',67),('m',67),('n',67),('o',67),('p',67),('q',67),('r',67),('s',67),('t',67),('u',67),('v',67),('w',67),('x',67),('y',67),('z',67)])),
	(68,St False [(Acc 19 (special ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)])),
	(69,St False [(Acc 20 (begin 0 special ) Nothing Nothing)] (-1) (Array.array ('0','0') [('0',-1)]))]
-- -----------------------------------------------------------------------------
-- Token type

data Token = T Posn Tkn
  deriving Show

tokPosn (T p _) = p

data Tkn
 = SpecialT Char
 | CodeT String
 | ZeroT
 | IdT String
 | StringT String
 | BindT String
 | CharT Char
 | SMacT String
 | RMacT String  
 | SMacDefT String
 | RMacDefT String  
 | NumT Int	
 deriving Show

-- -----------------------------------------------------------------------------
-- Token functions

special = mk_act (\p ln str -> T p (SpecialT  (head str)))
brace   = mk_act (\p ln str -> T p (SpecialT  '\123'))
zero    = mk_act (\p ln str -> T p ZeroT)
string  = mk_act (\p ln str -> T p (StringT (extract ln str)))
bind    = mk_act (\p ln str -> T p (BindT (takeWhile isIdChar str)))
escape  = mk_act (\p ln str -> T p (CharT (esc str)))
cch     = mk_act (\p ln str -> T p (CharT (do_cch ln str)))
char    = mk_act (\p ln str -> T p (CharT (head str)))
smac    = mk_act (\p ln str -> T p (SMacT (mac ln str)))
rmac    = mk_act (\p ln str -> T p (RMacT (mac ln str)))
smacdef = mk_act (\p ln str -> T p (SMacDefT (macdef ln str)))
rmacdef = mk_act (\p ln str -> T p (RMacDefT (macdef ln str)))
startcode = mk_act (\p ln str -> T p (IdT (take ln str)))

isIdChar c = isAlphaNum c || c `elem` "_'"

skip p c input len cont scs = 
  -- trace ("skip: " ++ take len input) $
  cont scs

-- begin a new startcode
begin startcode tok p c input len cont (_,s) = 
  tok p c input len cont (startcode,s)

-- the state is the level of brace nesting in code
nest_code p c input len cont (sc,(0,_)) =
  cont (sc,(1,""))
nest_code p c input len cont (sc,(state,so_far)) =
  -- trace ("incode " ++ show state) $
  cont (sc,(state+1,'\123':so_far))  -- TODO \123 = open brace

code p c inp len cont (sc,(n,so_far)) = 
  -- trace "code" $
  cont (sc,(n, reverse (take len inp) ++ so_far))

unnest_code p c input len cont (sc,(1,so_far)) =
  T p (CodeT (reverse so_far)) : cont (0,(0,""))
unnest_code p c input len cont (sc,(n,so_far)) =
  cont (incode,(n-1,'\125':so_far))  -- TODO \125 = close brace

stop p c "" scs   = []
stop p c rest scs = error "lexical error" -- TODO

mk_act ac = \p _ str len cont st -> ac p len str:cont st

extract ln str = take (ln-2) (tail str)
		
do_cch ln str = chr (str2int(take (ln-1) (tail str)))

mac ln (_ : str) = take (ln-1) str

macdef ln (_ : str) = takeWhile (not.isSpace) str

esc (_ : x : _)  =
 case x of
   'a' -> '\a'
   'b' -> '\b'
   'f' -> '\f'
   'n' -> '\n'
   'r' -> '\r'
   't' -> '\t'
   'v' -> '\v'
   c   ->  c

str2int:: String -> Int
str2int = foldl (\n d-> n*10+ord d-ord '0') 0

lexer :: String -> [Token]
lexer = gscan (load_gscan stop alex) (0::Int,"")
--lexer = gscan stop (0::Int,"")

incode,startcodes :: Int
incode = 1
startcodes = 2
